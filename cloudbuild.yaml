steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:$COMMIT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:latest'
      - '.'

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:$COMMIT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:latest'

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'promise-tracker-pipeline'
      - '--image'
      - 'us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--timeout'
      - '3600'
      - '--concurrency'
      - '10'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'PYTHONPATH=/app,ENVIRONMENT=production,BUILD_SHA=$COMMIT_SHA'

  # Verify deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$$(gcloud run services describe promise-tracker-pipeline --platform managed --region us-central1 --format 'value(status.url)')
        echo "üöÄ Deployment successful!"
        echo "üåê Service URL: $$SERVICE_URL"
        echo "üè∑Ô∏è  Git SHA: $COMMIT_SHA"
        echo "üì¶ Image: us-central1-docker.pkg.dev/promisetrackerapp/promise-tracker/promise-tracker-pipeline:$COMMIT_SHA"
        
        # Test the health endpoint
        curl -f "$$SERVICE_URL/" || exit 1
        echo "‚úÖ Health check passed"

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s' 